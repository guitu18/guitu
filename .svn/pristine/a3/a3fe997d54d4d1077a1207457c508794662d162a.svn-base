package reflect;

import org.junit.Test;

import java.lang.reflect.Method;
import java.util.Arrays;

/**
 * @author zhangkuan
 * @date 2019/8/21
 */
public class MethodInvokeTest {

    public void say(String hello) {
        System.out.println("MethodInvokeTest.say");
    }

    public void setAge(Integer age) {
        System.out.println("MethodInvokeTest.setAge");
    }

    public void score(int[] score) {
        System.out.println("MethodInvokeTest.score");
    }

    public void score(Integer[] score) {
        System.out.println("MethodInvokeTest.score");
    }

    public void like(String code, String read) {
        System.out.println("MethodInvokeTest.like");
    }

    public void like(String[] like) {
        System.out.println("MethodInvokeTest.like");
    }

    public void math(Integer score, Integer number) {
        System.out.println("MethodInvokeTest.score");
    }

    public void math(Integer score, Integer[] number) {
        System.out.println("MethodInvokeTest.score");
    }

    @Test
    public void test1() throws Exception {
        Class<MethodInvokeTest> clazz = MethodInvokeTest.class;
        Method method = clazz.getMethod("score", int[].class);
        int[] args = {1, 2, 3};
        method.invoke(clazz.newInstance(), (Object) args);
        System.out.println("args = " + Arrays.toString(args));
    }

    @Test
    public void test2() throws Exception {
        Class<MethodInvokeTest> clazz = MethodInvokeTest.class;
        Method method = clazz.getMethod("score", Integer[].class);
        Integer[] args = {1, 2, 3};
        method.invoke(clazz.newInstance(), (Object) args);
        System.out.println("args = " + Arrays.toString(args));
    }

    @Test
    public void test3() throws Exception {
        Class<MethodInvokeTest> clazz = MethodInvokeTest.class;
        Method method = clazz.getMethod("like", String[].class);
        String[] args = new String[]{"Java", "science"};
//        method.invoke(clazz.newInstance(), (Object) args);
        method.invoke(clazz.newInstance(), new Object[]{new String[]{"Java", "science"}});
        System.out.println("args = " + Arrays.toString(args));
    }

    @Test
    public void test4() throws Exception {
        Class<MethodInvokeTest> clazz = MethodInvokeTest.class;
        Method method = clazz.getMethod("like", String.class, String.class);
        Object[] args = {"Java", "science"};
        method.invoke(clazz.newInstance(), args);
        System.out.println("args = " + Arrays.toString(args));
    }

    @Test
    public void test5() throws Exception {
        Class<MethodInvokeTest> clazz = MethodInvokeTest.class;
        Method method = clazz.getMethod("math", Integer.class, Integer.class);
        method.invoke(clazz.newInstance(), 1, 2);
    }

    @Test
    public void test6() throws Exception {
        Class<MethodInvokeTest> clazz = MethodInvokeTest.class;
        Method method = clazz.getMethod("math", Integer.class, Integer[].class);
        Object[] args = {1, new int[]{1, 2, 3}};
        method.invoke(clazz.newInstance(), 1, new Integer[]{1, 2, 3});
        System.out.println("args = " + Arrays.toString(args));
    }

}
