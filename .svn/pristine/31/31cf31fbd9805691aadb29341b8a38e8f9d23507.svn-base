package com.guitu18.http;

import com.guitu18.common.Constants;
import io.netty.handler.codec.http.FullHttpRequest;
import io.netty.handler.codec.http.cookie.Cookie;
import io.netty.handler.codec.http.cookie.ServerCookieDecoder;
import lombok.Data;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;

/**
 * GTRequest
 *
 * @author zhangkuan
 * @date 2019/8/19
 */
@Data
public class GTRequest {

    private String httpVersion;

    private String uri;

    private String method;

    private Map<String, String> headers = new HashMap<String, String>();

    private Map<String, Cookie> cookies = new HashMap<String, Cookie>();

    /**
     * 包装Request参数
     *
     * @param request
     */
    public GTRequest(FullHttpRequest request) {
        this.httpVersion = request.protocolVersion().toString();
        this.uri = request.uri();
        this.method = request.method().name();
        parseHeaders(request);
    }


    /**
     * 解析Header
     *
     * @param request
     */
    private void parseHeaders(FullHttpRequest request) {
        for (Map.Entry<String, String> header : request.headers()) {
            String key = header.getKey();
            String value = header.getValue();
            headers.put(key, value);
            // 解析Cookie
            if (Constants.ContentType.COOKIE.equals(key)) {
                Set<Cookie> cookies = ServerCookieDecoder.LAX.decode(value);
                for (Cookie cookie : cookies) {
                    this.cookies.put(cookie.name(), cookie);
                }
            }
        }
    }

}
